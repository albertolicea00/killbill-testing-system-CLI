# coding: utf-8

"""
    Kill Bill

    Kill Bill is an open-source billing and payments platform

    The version of the OpenAPI document: 0.24.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import io
import warnings

from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Dict, List, Optional, Tuple, Union, Any

try:
    from typing import Annotated
except ImportError:
    from typing_extensions import Annotated

from pydantic import Field
from typing_extensions import Annotated
from pydantic import StrictStr, field_validator

from typing import List, Optional

from openapi_client.models.combo_hosted_payment_page import ComboHostedPaymentPage
from openapi_client.models.hosted_payment_page_fields import HostedPaymentPageFields
from openapi_client.models.hosted_payment_page_form_descriptor import HostedPaymentPageFormDescriptor

from openapi_client.api_client import ApiClient
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class PaymentGatewayApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def build_combo_form_descriptor(
        self,
        x_killbill_created_by: StrictStr,
        combo_hosted_payment_page: ComboHostedPaymentPage,
        control_plugin_name: Optional[List[StrictStr]] = None,
        plugin_property: Optional[List[StrictStr]] = None,
        x_killbill_reason: Optional[StrictStr] = None,
        x_killbill_comment: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> HostedPaymentPageFormDescriptor:
        """Combo API to generate form data to redirect the customer to the gateway

        

        :param x_killbill_created_by: (required)
        :type x_killbill_created_by: str
        :param combo_hosted_payment_page: (required)
        :type combo_hosted_payment_page: ComboHostedPaymentPage
        :param control_plugin_name:
        :type control_plugin_name: List[str]
        :param plugin_property:
        :type plugin_property: List[str]
        :param x_killbill_reason:
        :type x_killbill_reason: str
        :param x_killbill_comment:
        :type x_killbill_comment: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._build_combo_form_descriptor_serialize(
            x_killbill_created_by=x_killbill_created_by,
            combo_hosted_payment_page=combo_hosted_payment_page,
            control_plugin_name=control_plugin_name,
            plugin_property=plugin_property,
            x_killbill_reason=x_killbill_reason,
            x_killbill_comment=x_killbill_comment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HostedPaymentPageFormDescriptor",
            '400': None
            
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def build_combo_form_descriptor_with_http_info(
        self,
        x_killbill_created_by: StrictStr,
        combo_hosted_payment_page: ComboHostedPaymentPage,
        control_plugin_name: Optional[List[StrictStr]] = None,
        plugin_property: Optional[List[StrictStr]] = None,
        x_killbill_reason: Optional[StrictStr] = None,
        x_killbill_comment: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[HostedPaymentPageFormDescriptor]:
        """Combo API to generate form data to redirect the customer to the gateway

        

        :param x_killbill_created_by: (required)
        :type x_killbill_created_by: str
        :param combo_hosted_payment_page: (required)
        :type combo_hosted_payment_page: ComboHostedPaymentPage
        :param control_plugin_name:
        :type control_plugin_name: List[str]
        :param plugin_property:
        :type plugin_property: List[str]
        :param x_killbill_reason:
        :type x_killbill_reason: str
        :param x_killbill_comment:
        :type x_killbill_comment: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._build_combo_form_descriptor_serialize(
            x_killbill_created_by=x_killbill_created_by,
            combo_hosted_payment_page=combo_hosted_payment_page,
            control_plugin_name=control_plugin_name,
            plugin_property=plugin_property,
            x_killbill_reason=x_killbill_reason,
            x_killbill_comment=x_killbill_comment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HostedPaymentPageFormDescriptor",
            '400': None
            
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def build_combo_form_descriptor_without_preload_content(
        self,
        x_killbill_created_by: StrictStr,
        combo_hosted_payment_page: ComboHostedPaymentPage,
        control_plugin_name: Optional[List[StrictStr]] = None,
        plugin_property: Optional[List[StrictStr]] = None,
        x_killbill_reason: Optional[StrictStr] = None,
        x_killbill_comment: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Combo API to generate form data to redirect the customer to the gateway

        

        :param x_killbill_created_by: (required)
        :type x_killbill_created_by: str
        :param combo_hosted_payment_page: (required)
        :type combo_hosted_payment_page: ComboHostedPaymentPage
        :param control_plugin_name:
        :type control_plugin_name: List[str]
        :param plugin_property:
        :type plugin_property: List[str]
        :param x_killbill_reason:
        :type x_killbill_reason: str
        :param x_killbill_comment:
        :type x_killbill_comment: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._build_combo_form_descriptor_serialize(
            x_killbill_created_by=x_killbill_created_by,
            combo_hosted_payment_page=combo_hosted_payment_page,
            control_plugin_name=control_plugin_name,
            plugin_property=plugin_property,
            x_killbill_reason=x_killbill_reason,
            x_killbill_comment=x_killbill_comment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HostedPaymentPageFormDescriptor",
            '400': None
            
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _build_combo_form_descriptor_serialize(
        self,
        x_killbill_created_by,
        combo_hosted_payment_page,
        control_plugin_name,
        plugin_property,
        x_killbill_reason,
        x_killbill_comment,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> Tuple:

        _host = None

        _collection_formats: Dict[str, str] = {
            
            'controlPluginName': 'multi',
            'pluginProperty': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if control_plugin_name is not None:
            
            _query_params.append(('controlPluginName', control_plugin_name))
            
        if plugin_property is not None:
            
            _query_params.append(('pluginProperty', plugin_property))
            
        # process the header parameters
        if x_killbill_created_by is not None:
            _header_params['X-Killbill-CreatedBy'] = x_killbill_created_by
        if x_killbill_reason is not None:
            _header_params['X-Killbill-Reason'] = x_killbill_reason
        if x_killbill_comment is not None:
            _header_params['X-Killbill-Comment'] = x_killbill_comment
        # process the form parameters
        # process the body parameter
        if combo_hosted_payment_page is not None:
            _body_params = combo_hosted_payment_page


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Killbill_Api_Key', 
            'basicAuth', 
            'Killbill_Api_Secret'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/1.0/kb/paymentGateways/hosted/form',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def build_form_descriptor(
        self,
        account_id: Annotated[str, Field(strict=True)],
        x_killbill_created_by: StrictStr,
        hosted_payment_page_fields: HostedPaymentPageFields,
        payment_method_id: Optional[StrictStr] = None,
        control_plugin_name: Optional[List[StrictStr]] = None,
        plugin_property: Optional[List[StrictStr]] = None,
        x_killbill_reason: Optional[StrictStr] = None,
        x_killbill_comment: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> HostedPaymentPageFormDescriptor:
        """Generate form data to redirect the customer to the gateway

        

        :param account_id: (required)
        :type account_id: str
        :param x_killbill_created_by: (required)
        :type x_killbill_created_by: str
        :param hosted_payment_page_fields: (required)
        :type hosted_payment_page_fields: HostedPaymentPageFields
        :param payment_method_id:
        :type payment_method_id: str
        :param control_plugin_name:
        :type control_plugin_name: List[str]
        :param plugin_property:
        :type plugin_property: List[str]
        :param x_killbill_reason:
        :type x_killbill_reason: str
        :param x_killbill_comment:
        :type x_killbill_comment: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._build_form_descriptor_serialize(
            account_id=account_id,
            x_killbill_created_by=x_killbill_created_by,
            hosted_payment_page_fields=hosted_payment_page_fields,
            payment_method_id=payment_method_id,
            control_plugin_name=control_plugin_name,
            plugin_property=plugin_property,
            x_killbill_reason=x_killbill_reason,
            x_killbill_comment=x_killbill_comment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HostedPaymentPageFormDescriptor",
            '404': None
            
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def build_form_descriptor_with_http_info(
        self,
        account_id: Annotated[str, Field(strict=True)],
        x_killbill_created_by: StrictStr,
        hosted_payment_page_fields: HostedPaymentPageFields,
        payment_method_id: Optional[StrictStr] = None,
        control_plugin_name: Optional[List[StrictStr]] = None,
        plugin_property: Optional[List[StrictStr]] = None,
        x_killbill_reason: Optional[StrictStr] = None,
        x_killbill_comment: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[HostedPaymentPageFormDescriptor]:
        """Generate form data to redirect the customer to the gateway

        

        :param account_id: (required)
        :type account_id: str
        :param x_killbill_created_by: (required)
        :type x_killbill_created_by: str
        :param hosted_payment_page_fields: (required)
        :type hosted_payment_page_fields: HostedPaymentPageFields
        :param payment_method_id:
        :type payment_method_id: str
        :param control_plugin_name:
        :type control_plugin_name: List[str]
        :param plugin_property:
        :type plugin_property: List[str]
        :param x_killbill_reason:
        :type x_killbill_reason: str
        :param x_killbill_comment:
        :type x_killbill_comment: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._build_form_descriptor_serialize(
            account_id=account_id,
            x_killbill_created_by=x_killbill_created_by,
            hosted_payment_page_fields=hosted_payment_page_fields,
            payment_method_id=payment_method_id,
            control_plugin_name=control_plugin_name,
            plugin_property=plugin_property,
            x_killbill_reason=x_killbill_reason,
            x_killbill_comment=x_killbill_comment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HostedPaymentPageFormDescriptor",
            '404': None
            
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def build_form_descriptor_without_preload_content(
        self,
        account_id: Annotated[str, Field(strict=True)],
        x_killbill_created_by: StrictStr,
        hosted_payment_page_fields: HostedPaymentPageFields,
        payment_method_id: Optional[StrictStr] = None,
        control_plugin_name: Optional[List[StrictStr]] = None,
        plugin_property: Optional[List[StrictStr]] = None,
        x_killbill_reason: Optional[StrictStr] = None,
        x_killbill_comment: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Generate form data to redirect the customer to the gateway

        

        :param account_id: (required)
        :type account_id: str
        :param x_killbill_created_by: (required)
        :type x_killbill_created_by: str
        :param hosted_payment_page_fields: (required)
        :type hosted_payment_page_fields: HostedPaymentPageFields
        :param payment_method_id:
        :type payment_method_id: str
        :param control_plugin_name:
        :type control_plugin_name: List[str]
        :param plugin_property:
        :type plugin_property: List[str]
        :param x_killbill_reason:
        :type x_killbill_reason: str
        :param x_killbill_comment:
        :type x_killbill_comment: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._build_form_descriptor_serialize(
            account_id=account_id,
            x_killbill_created_by=x_killbill_created_by,
            hosted_payment_page_fields=hosted_payment_page_fields,
            payment_method_id=payment_method_id,
            control_plugin_name=control_plugin_name,
            plugin_property=plugin_property,
            x_killbill_reason=x_killbill_reason,
            x_killbill_comment=x_killbill_comment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HostedPaymentPageFormDescriptor",
            '404': None
            
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _build_form_descriptor_serialize(
        self,
        account_id,
        x_killbill_created_by,
        hosted_payment_page_fields,
        payment_method_id,
        control_plugin_name,
        plugin_property,
        x_killbill_reason,
        x_killbill_comment,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> Tuple:

        _host = None

        _collection_formats: Dict[str, str] = {
            
            'controlPluginName': 'multi',
            'pluginProperty': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if account_id is not None:
            _path_params['accountId'] = account_id
        # process the query parameters
        if payment_method_id is not None:
            
            _query_params.append(('paymentMethodId', payment_method_id))
            
        if control_plugin_name is not None:
            
            _query_params.append(('controlPluginName', control_plugin_name))
            
        if plugin_property is not None:
            
            _query_params.append(('pluginProperty', plugin_property))
            
        # process the header parameters
        if x_killbill_created_by is not None:
            _header_params['X-Killbill-CreatedBy'] = x_killbill_created_by
        if x_killbill_reason is not None:
            _header_params['X-Killbill-Reason'] = x_killbill_reason
        if x_killbill_comment is not None:
            _header_params['X-Killbill-Comment'] = x_killbill_comment
        # process the form parameters
        # process the body parameter
        if hosted_payment_page_fields is not None:
            _body_params = hosted_payment_page_fields


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'Killbill_Api_Key', 
            'basicAuth', 
            'Killbill_Api_Secret'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/1.0/kb/paymentGateways/hosted/form/{accountId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def process_notification(
        self,
        plugin_name: Annotated[str, Field(strict=True)],
        x_killbill_created_by: StrictStr,
        body: StrictStr,
        control_plugin_name: Optional[List[StrictStr]] = None,
        plugin_property: Optional[List[StrictStr]] = None,
        x_killbill_reason: Optional[StrictStr] = None,
        x_killbill_comment: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Process a gateway notification

        The response is built by the appropriate plugin

        :param plugin_name: (required)
        :type plugin_name: str
        :param x_killbill_created_by: (required)
        :type x_killbill_created_by: str
        :param body: (required)
        :type body: str
        :param control_plugin_name:
        :type control_plugin_name: List[str]
        :param plugin_property:
        :type plugin_property: List[str]
        :param x_killbill_reason:
        :type x_killbill_reason: str
        :param x_killbill_comment:
        :type x_killbill_comment: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._process_notification_serialize(
            plugin_name=plugin_name,
            x_killbill_created_by=x_killbill_created_by,
            body=body,
            control_plugin_name=control_plugin_name,
            plugin_property=plugin_property,
            x_killbill_reason=x_killbill_reason,
            x_killbill_comment=x_killbill_comment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def process_notification_with_http_info(
        self,
        plugin_name: Annotated[str, Field(strict=True)],
        x_killbill_created_by: StrictStr,
        body: StrictStr,
        control_plugin_name: Optional[List[StrictStr]] = None,
        plugin_property: Optional[List[StrictStr]] = None,
        x_killbill_reason: Optional[StrictStr] = None,
        x_killbill_comment: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Process a gateway notification

        The response is built by the appropriate plugin

        :param plugin_name: (required)
        :type plugin_name: str
        :param x_killbill_created_by: (required)
        :type x_killbill_created_by: str
        :param body: (required)
        :type body: str
        :param control_plugin_name:
        :type control_plugin_name: List[str]
        :param plugin_property:
        :type plugin_property: List[str]
        :param x_killbill_reason:
        :type x_killbill_reason: str
        :param x_killbill_comment:
        :type x_killbill_comment: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._process_notification_serialize(
            plugin_name=plugin_name,
            x_killbill_created_by=x_killbill_created_by,
            body=body,
            control_plugin_name=control_plugin_name,
            plugin_property=plugin_property,
            x_killbill_reason=x_killbill_reason,
            x_killbill_comment=x_killbill_comment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def process_notification_without_preload_content(
        self,
        plugin_name: Annotated[str, Field(strict=True)],
        x_killbill_created_by: StrictStr,
        body: StrictStr,
        control_plugin_name: Optional[List[StrictStr]] = None,
        plugin_property: Optional[List[StrictStr]] = None,
        x_killbill_reason: Optional[StrictStr] = None,
        x_killbill_comment: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Process a gateway notification

        The response is built by the appropriate plugin

        :param plugin_name: (required)
        :type plugin_name: str
        :param x_killbill_created_by: (required)
        :type x_killbill_created_by: str
        :param body: (required)
        :type body: str
        :param control_plugin_name:
        :type control_plugin_name: List[str]
        :param plugin_property:
        :type plugin_property: List[str]
        :param x_killbill_reason:
        :type x_killbill_reason: str
        :param x_killbill_comment:
        :type x_killbill_comment: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._process_notification_serialize(
            plugin_name=plugin_name,
            x_killbill_created_by=x_killbill_created_by,
            body=body,
            control_plugin_name=control_plugin_name,
            plugin_property=plugin_property,
            x_killbill_reason=x_killbill_reason,
            x_killbill_comment=x_killbill_comment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _process_notification_serialize(
        self,
        plugin_name,
        x_killbill_created_by,
        body,
        control_plugin_name,
        plugin_property,
        x_killbill_reason,
        x_killbill_comment,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> Tuple:

        _host = None

        _collection_formats: Dict[str, str] = {
            
            'controlPluginName': 'multi',
            'pluginProperty': 'multi',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if plugin_name is not None:
            _path_params['pluginName'] = plugin_name
        # process the query parameters
        if control_plugin_name is not None:
            
            _query_params.append(('controlPluginName', control_plugin_name))
            
        if plugin_property is not None:
            
            _query_params.append(('pluginProperty', plugin_property))
            
        # process the header parameters
        if x_killbill_created_by is not None:
            _header_params['X-Killbill-CreatedBy'] = x_killbill_created_by
        if x_killbill_reason is not None:
            _header_params['X-Killbill-Reason'] = x_killbill_reason
        if x_killbill_comment is not None:
            _header_params['X-Killbill-Comment'] = x_killbill_comment
        # process the form parameters
        # process the body parameter
        if body is not None:
            _body_params = body




        # authentication setting
        _auth_settings: List[str] = [
            'Killbill_Api_Key', 
            'basicAuth', 
            'Killbill_Api_Secret'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/1.0/kb/paymentGateways/notification/{pluginName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


